# -*- coding: utf-8 -*-
"""WordCloud.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PnwypWtF8-vbUkwA4Kjw9VPNQmtcOCBG
"""

# Commented out IPython magic to ensure Python compatibility.
import nltk
import pandas as pd
import os
import numpy as np
import string
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
import matplotlib.cm as cm
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

data = pd.read_csv('base reclamações.csv',encoding='windows-1252',sep =';')
# verificação visual das 5 primeiras linhas
data.head()

data.shape

data.columns

data.isnull().sum()

df_empresa = pd.DataFrame()
df_empresa['empresa'] = data['empresa']

df_empresa.isnull().sum()

df_empresa.dropna(inplace=True)
df_empresa.isnull().sum()

dicionario = {' ':'_','/':'',',':'','\(':'','\)':'',"-":'','\.':'',r"^\t":''}
df_empresa["Nome Empresa Sem Espaço"] = df_empresa.replace({'empresa': dicionario},regex=True)

df_empresa["Nome Empresa Sem Espaço"] = df_empresa["Nome Empresa Sem Espaço"].str.lower()

print (df_empresa.groupby("Nome Empresa Sem Espaço").size().sort_values(ascending=False))

string_empresas = " ".join([text for text in df_empresa["Nome Empresa Sem Espaço"]])

wordcloud_empresas = WordCloud(background_color="white",collocations=False,
                              colormap="Oranges_r",
                              width = 3000,
                              height = 2000,
                              max_font_size=1000,
                              max_words=40
                             ).generate(string_empresas)
plt.figure(figsize = (40,30),
           facecolor = 'k',
           edgecolor = 'k')
plt.imshow(wordcloud_empresas, interpolation='bilinear')
plt.axis('off')
plt.tight_layout(pad=0)
plt.savefig("Empresa_wordcloud.png")
plt.show()

df_estado = pd.DataFrame()
df_estado['estado'] = data['estado']

df_estado.isnull().sum()

dicionario = {' ':'_','/':'',',':'','\(':'','\)':'',"-":'','\.':'',r"^\t":''}
df_estado["Nome Estado Sem Espaço"] = df_estado.replace({'estado': dicionario},regex=True)

df_estado["Nome Estado Sem Espaço"] = df_estado["Nome Estado Sem Espaço"].str.lower()

print (df_estado.groupby("Nome Estado Sem Espaço").size().sort_values(ascending=False))

string_estado = " ".join([text for text in df_estado["Nome Estado Sem Espaço"]])

wordcloud_estado = WordCloud(background_color="white",collocations=False,
                              colormap="Oranges_r",
                              width = 3000,
                              height = 2000,
                              max_font_size=1000,
                              max_words=100
                             ).generate(string_estado)
plt.figure(figsize = (40,30),
           facecolor = 'k',
           edgecolor = 'k')
plt.imshow(wordcloud_estado, interpolation='bilinear')
plt.axis('off')
plt.tight_layout(pad=0)
plt.savefig("Estado_wordcloud.png")
plt.show()

df_serviço = pd.DataFrame()
df_serviço['serviço'] = data['serviço']

df_serviço.isnull().sum()

import re

lower_alpha = lambda x: re.sub(r"""\w*\d\w*""", ' ', x.lower())
data['serviço'] = data.serviço.map(lower_alpha)

data.head()

import string

punc_re = lambda x: re.sub('[%s]' % re.escape(string.punctuation), ' ', x)
data['serviço'] = data.serviço.map(punc_re)

data.head()

import nltk
nltk.download('punkt')
from nltk.tokenize import word_tokenize

data['tokens'] = data.serviço.map(word_tokenize)
data.head()

word_list = sum(data.tokens.tolist(), [])

word_list[:10]

from collections import Counter

word_counts = Counter(word_list)

word_counts = list(zip(word_counts.values(), word_counts.keys()))

word_counts = sorted(word_counts, reverse=True)

word_counts[:40]

from nltk.corpus import stopwords
nltk.download("stopwords")

stop_words = stopwords.words('portuguese')

stop_lambda = lambda x: [y for y in x if y not in stop_words]
data['tokens_stop'] = data.tokens.apply(stop_lambda)
data.head()

word_list_clean = sum(data.tokens_stop.tolist(), [])

word_list_clean[:10]

word_counts_clean = Counter(word_list_clean)
a = word_counts_clean

word_counts_clean = list(zip(word_counts_clean.values(), word_counts_clean.keys()))

word_counts_clean = sorted(word_counts_clean, reverse=True)

word_counts_clean[:10]

!pip install wordcloud
text = word_list_clean
wordcloud = WordCloud(width=1600, height=800, max_font_size=200).fit_words(a)
plt.figure(figsize=(12,10))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()











